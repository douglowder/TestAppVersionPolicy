diff --git a/node_modules/expo-updates/plugin/build/withUpdates.js b/node_modules/expo-updates/plugin/build/withUpdates.js
index 618c37f..fdde10a 100644
--- a/node_modules/expo-updates/plugin/build/withUpdates.js
+++ b/node_modules/expo-updates/plugin/build/withUpdates.js
@@ -6,7 +6,15 @@ const pkg = require('expo-updates/package.json');
 const withUpdates = (config, props = {}) => {
     // The username will be passed from the CLI when the plugin is automatically used.
     const expoUsername = (props || {}).expoUsername ?? (0, config_1.getAccountUsername)(config);
-    config = config_plugins_1.AndroidConfig.Updates.withUpdates(config, { expoUsername });
+    // Fix up Android runtime version to ensure value is parsed correctly by UpdatesConfiguration (see #13365)
+    let androidConfig;
+    if (typeof config.runtimeVersion !== 'string' && config.runtimeVersion?.policy === 'appVersion') {
+        androidConfig = { ...config, ...{ runtimeVersion: `string:${config.version}` } };
+    }
+    else {
+        androidConfig = config;
+    }
+    config = config_plugins_1.AndroidConfig.Updates.withUpdates(androidConfig, { expoUsername });
     config = config_plugins_1.IOSConfig.Updates.withUpdates(config, { expoUsername });
     return config;
 };
diff --git a/node_modules/expo-updates/plugin/src/withUpdates.ts b/node_modules/expo-updates/plugin/src/withUpdates.ts
index e094cab..19a8248 100644
--- a/node_modules/expo-updates/plugin/src/withUpdates.ts
+++ b/node_modules/expo-updates/plugin/src/withUpdates.ts
@@ -7,7 +7,15 @@ const withUpdates: ConfigPlugin<{ expoUsername?: string } | void> = (config, pro
   // The username will be passed from the CLI when the plugin is automatically used.
   const expoUsername = (props || {}).expoUsername ?? getAccountUsername(config);
 
-  config = AndroidConfig.Updates.withUpdates(config, { expoUsername });
+  // Fix up Android runtime version to ensure value is parsed correctly by UpdatesConfiguration (see #13365)
+  let androidConfig;
+  if (typeof config.runtimeVersion !== 'string' && config.runtimeVersion?.policy === 'appVersion') {
+    androidConfig = { ...config, ...{ runtimeVersion: `string:${config.version}` } };
+  } else {
+    androidConfig = config;
+  }
+
+  config = AndroidConfig.Updates.withUpdates(androidConfig, { expoUsername });
   config = IOSConfig.Updates.withUpdates(config, { expoUsername });
   return config;
 };
